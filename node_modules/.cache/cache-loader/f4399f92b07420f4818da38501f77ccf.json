{"remainingRequest":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/CodeBlock/index.js","mtime":1618406861249},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/cache-loader/dist/cjs.js","mtime":1603205709816},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js","mtime":1606901692624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}