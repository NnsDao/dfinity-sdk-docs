{"remainingRequest":"/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/babel-loader-virtual-1711bda2ea/0/cache/babel-loader-npm-8.2.2-b4e600c2c5-362bb71573.zip/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/@docusaurus-theme-classic-virtual-1da0509242/1/packages/docusaurus-theme-classic/lib-next/theme/NavbarItem/DocNavbarItem.js","dependencies":[{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/@docusaurus-theme-classic-virtual-1da0509242/1/packages/docusaurus-theme-classic/lib-next/theme/NavbarItem/DocNavbarItem.js","mtime":1618407430938},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/cache-loader-virtual-d812efc82d/0/cache/cache-loader-npm-4.1.0-82c3da90d8-2e369f72e3.zip/node_modules/cache-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/babel-loader-virtual-1711bda2ea/0/cache/babel-loader-npm-8.2.2-b4e600c2c5-362bb71573.zip/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3NlYmFzdGllbmxvcmJlci9EZXNrdG9wL3Byb2plY3RzL2RvY3VzYXVydXMvLnlhcm4vY2FjaGUvQGJhYmVsLXJ1bnRpbWUtbnBtLTcuMTIuMTMtZTUyMzVlZWQ5Yy01MmU4YWM5N2Y1LnppcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0IERlZmF1bHROYXZiYXJJdGVtIGZyb20nQHRoZW1lL05hdmJhckl0ZW0vRGVmYXVsdE5hdmJhckl0ZW0nO2ltcG9ydHt1c2VMYXRlc3RWZXJzaW9uLHVzZUFjdGl2ZURvY0NvbnRleHR9ZnJvbSdAdGhlbWUvaG9va3MvdXNlRG9jcyc7aW1wb3J0IGNsc3ggZnJvbSdjbHN4JztpbXBvcnR7dXNlRG9jc1ByZWZlcnJlZFZlcnNpb259ZnJvbSdAZG9jdXNhdXJ1cy90aGVtZS1jb21tb24nO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERvY05hdmJhckl0ZW0oe2RvY0lkLGFjdGl2ZVNpZGViYXJDbGFzc05hbWUsbGFiZWw6c3RhdGljTGFiZWwsZG9jc1BsdWdpbklkLC4uLnByb3BzfSl7dmFyIF9yZWY7Y29uc3R7YWN0aXZlVmVyc2lvbixhY3RpdmVEb2N9PXVzZUFjdGl2ZURvY0NvbnRleHQoZG9jc1BsdWdpbklkKTtjb25zdHtwcmVmZXJyZWRWZXJzaW9ufT11c2VEb2NzUHJlZmVycmVkVmVyc2lvbihkb2NzUGx1Z2luSWQpO2NvbnN0IGxhdGVzdFZlcnNpb249dXNlTGF0ZXN0VmVyc2lvbihkb2NzUGx1Z2luSWQpO2NvbnN0IHZlcnNpb249KF9yZWY9YWN0aXZlVmVyc2lvbiE9PW51bGwmJmFjdGl2ZVZlcnNpb24hPT12b2lkIDA/YWN0aXZlVmVyc2lvbjpwcmVmZXJyZWRWZXJzaW9uKSE9PW51bGwmJl9yZWYhPT12b2lkIDA/X3JlZjpsYXRlc3RWZXJzaW9uO2NvbnN0IGRvYz12ZXJzaW9uLmRvY3MuZmluZCh2ZXJzaW9uRG9jPT52ZXJzaW9uRG9jLmlkPT09ZG9jSWQpO2lmKCFkb2Mpe2NvbnN0IGRvY0lkcz12ZXJzaW9uLmRvY3MubWFwKHZlcnNpb25Eb2M9PnZlcnNpb25Eb2MuaWQpLmpvaW4oJ1xuLSAnKTt0aHJvdyBuZXcgRXJyb3IoYERvY05hdmJhckl0ZW06IGNvdWxkbid0IGZpbmQgYW55IGRvYyB3aXRoIGlkPSR7ZG9jSWR9IGluIHZlcnNpb24gJHt2ZXJzaW9uLm5hbWV9LgpBdmFpbGFibGUgZG9jSWRzPVxuLSAke2RvY0lkc31gKTt9cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRGVmYXVsdE5hdmJhckl0ZW0sX2V4dGVuZHMoe2V4YWN0OnRydWV9LHByb3BzLHtjbGFzc05hbWU6Y2xzeChwcm9wcy5jbGFzc05hbWUse1thY3RpdmVTaWRlYmFyQ2xhc3NOYW1lXTphY3RpdmVEb2MmJmFjdGl2ZURvYy5zaWRlYmFyPT09ZG9jLnNpZGViYXJ9KSxsYWJlbDpzdGF0aWNMYWJlbCE9PW51bGwmJnN0YXRpY0xhYmVsIT09dm9pZCAwP3N0YXRpY0xhYmVsOmRvYy5pZCx0bzpkb2MucGF0aH0pKTt9"},{"version":3,"sources":["/Users/sebastienlorber/Desktop/projects/docusaurus/.yarn/$$virtual/@docusaurus-theme-classic-virtual-1da0509242/1/packages/docusaurus-theme-classic/lib-next/theme/NavbarItem/DocNavbarItem.js"],"names":["React","DefaultNavbarItem","useLatestVersion","useActiveDocContext","clsx","useDocsPreferredVersion","DocNavbarItem","docId","activeSidebarClassName","label","staticLabel","docsPluginId","props","activeVersion","activeDoc","preferredVersion","latestVersion","version","doc","docs","find","versionDoc","id","docIds","map","join","Error","name","className","sidebar","path"],"mappings":"0LAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,OAASC,gBAAT,CAA2BC,mBAA3B,KAAsD,sBAAtD,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,uBAAT,KAAwC,0BAAxC,CACA,cAAe,SAASC,CAAAA,aAAT,CAAuB,CACpCC,KADoC,CAEpCC,sBAFoC,CAGpCC,KAAK,CAAEC,WAH6B,CAIpCC,YAJoC,CAKpC,GAAGC,KALiC,CAAvB,CAMZ,UACD,KAAM,CACJC,aADI,CAEJC,SAFI,EAGFX,mBAAmB,CAACQ,YAAD,CAHvB,CAIA,KAAM,CACJI,gBADI,EAEFV,uBAAuB,CAACM,YAAD,CAF3B,CAGA,KAAMK,CAAAA,aAAa,CAAGd,gBAAgB,CAACS,YAAD,CAAtC,CACA,KAAMM,CAAAA,OAAO,OAAGJ,aAAH,SAAGA,aAAH,UAAGA,aAAH,CAAoBE,gBAApB,6BAAwCC,aAArD,CACA,KAAME,CAAAA,GAAG,CAAGD,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAkBC,UAAU,EAAIA,UAAU,CAACC,EAAX,GAAkBf,KAAlD,CAAZ,CAEA,GAAI,CAACW,GAAL,CAAU,CACR,KAAMK,CAAAA,MAAM,CAAGN,OAAO,CAACE,IAAR,CAAaK,GAAb,CAAiBH,UAAU,EAAIA,UAAU,CAACC,EAA1C,EAA8CG,IAA9C,CAAmD,MAAnD,CAAf,CACA,KAAM,IAAIC,CAAAA,KAAJ,CAAW,gDAA+CnB,KAAM,eAAcU,OAAO,CAACU,IAAK;AACrG,uBAAuBJ,MAAO,EADpB,CAAN,CAED,CAED,mBAAO,oBAAC,iBAAD,WAAmB,KAAK,KAAxB,EAA6BX,KAA7B,EAAoC,SAAS,CAAER,IAAI,CAACQ,KAAK,CAACgB,SAAP,CAAkB,CAC1E,CAACpB,sBAAD,EAA0BM,SAAS,EAAIA,SAAS,CAACe,OAAV,GAAsBX,GAAG,CAACW,OADS,CAAlB,CAAnD,CAEH,KAAK,CAAEnB,WAAF,SAAEA,WAAF,UAAEA,WAAF,CAAiBQ,GAAG,CAACI,EAFvB,CAE2B,EAAE,CAAEJ,GAAG,CAACY,IAFnC,GAAP,CAGD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport DefaultNavbarItem from '@theme/NavbarItem/DefaultNavbarItem';\nimport { useLatestVersion, useActiveDocContext } from '@theme/hooks/useDocs';\nimport clsx from 'clsx';\nimport { useDocsPreferredVersion } from '@docusaurus/theme-common';\nexport default function DocNavbarItem({\n  docId,\n  activeSidebarClassName,\n  label: staticLabel,\n  docsPluginId,\n  ...props\n}) {\n  const {\n    activeVersion,\n    activeDoc\n  } = useActiveDocContext(docsPluginId);\n  const {\n    preferredVersion\n  } = useDocsPreferredVersion(docsPluginId);\n  const latestVersion = useLatestVersion(docsPluginId);\n  const version = activeVersion ?? preferredVersion ?? latestVersion;\n  const doc = version.docs.find(versionDoc => versionDoc.id === docId);\n\n  if (!doc) {\n    const docIds = version.docs.map(versionDoc => versionDoc.id).join('\\n- ');\n    throw new Error(`DocNavbarItem: couldn't find any doc with id=${docId} in version ${version.name}.\nAvailable docIds=\\n- ${docIds}`);\n  }\n\n  return <DefaultNavbarItem exact {...props} className={clsx(props.className, {\n    [activeSidebarClassName]: activeDoc && activeDoc.sidebar === doc.sidebar\n  })} label={staticLabel ?? doc.id} to={doc.path} />;\n}"]}]}