{"remainingRequest":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/ThemedImage/index.js","dependencies":[{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/ThemedImage/index.js","mtime":1619009910815},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/cache-loader/dist/cjs.js","mtime":1603205709816},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js","mtime":1606901692624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3NlYmFzdGllbmxvcmJlci9EZXNrdG9wL3Byb2plY3RzL2RvY3VzYXVydXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiOy8qKgogKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4KICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlCiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydCBjbHN4IGZyb20nY2xzeCc7aW1wb3J0IHVzZURvY3VzYXVydXNDb250ZXh0IGZyb20nQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQnO2ltcG9ydCB1c2VUaGVtZUNvbnRleHQgZnJvbSdAdGhlbWUvaG9va3MvdXNlVGhlbWVDb250ZXh0JztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7Y29uc3QgVGhlbWVkSW1hZ2U9cHJvcHM9Pntjb25zdHtpc0NsaWVudH09dXNlRG9jdXNhdXJ1c0NvbnRleHQoKTtjb25zdHtpc0RhcmtUaGVtZX09dXNlVGhlbWVDb250ZXh0KCk7Y29uc3R7c291cmNlcyxjbGFzc05hbWUsYWx0PScnLC4uLnByb3BzUmVzdH09cHJvcHM7Y29uc3QgcmVuZGVyZWRTb3VyY2VOYW1lcz1pc0NsaWVudD9pc0RhcmtUaGVtZT9bJ2RhcmsnXTpbJ2xpZ2h0J106Ly8gV2UgbmVlZCB0byByZW5kZXIgYm90aCBpbWFnZXMgb24gdGhlIHNlcnZlciB0byBhdm9pZCBmbGFzaAovLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvcHVsbC8zNzMwClsnbGlnaHQnLCdkYXJrJ107cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxyZW5kZXJlZFNvdXJjZU5hbWVzLm1hcChzb3VyY2VOYW1lPT4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiaW1nIixfZXh0ZW5kcyh7a2V5OnNvdXJjZU5hbWUsc3JjOnNvdXJjZXNbc291cmNlTmFtZV0sYWx0OmFsdCxjbGFzc05hbWU6Y2xzeChzdHlsZXMudGhlbWVkSW1hZ2Usc3R5bGVzW2B0aGVtZWRJbWFnZS0tJHtzb3VyY2VOYW1lfWBdLGNsYXNzTmFtZSl9LHByb3BzUmVzdCkpKSk7fTtleHBvcnQgZGVmYXVsdCBUaGVtZWRJbWFnZTs="},{"version":3,"sources":["/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/ThemedImage/index.js"],"names":["React","clsx","useDocusaurusContext","useThemeContext","styles","ThemedImage","props","isClient","isDarkTheme","sources","className","alt","propsRest","renderedSourceNames","map","sourceName","themedImage"],"mappings":"yHAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,KAAMC,CAAAA,WAAW,CAAGC,KAAK,EAAI,CAC3B,KAAM,CACJC,QADI,EAEFL,oBAAoB,EAFxB,CAGA,KAAM,CACJM,WADI,EAEFL,eAAe,EAFnB,CAGA,KAAM,CACJM,OADI,CAEJC,SAFI,CAGJC,GAAG,CAAG,EAHF,CAIJ,GAAGC,SAJC,EAKFN,KALJ,CAMA,KAAMO,CAAAA,mBAAmB,CAAGN,QAAQ,CAAGC,WAAW,CAAG,CAAC,MAAD,CAAH,CAAc,CAAC,OAAD,CAA5B,CAAwC;AAC5E;AACA,CAAC,OAAD,CAAU,MAAV,CAFA,CAGA,mBAAO,wCACFK,mBAAmB,CAACC,GAApB,CAAwBC,UAAU,eAAI,oCAAK,GAAG,CAAEA,UAAV,CAAsB,GAAG,CAAEN,OAAO,CAACM,UAAD,CAAlC,CAAgD,GAAG,CAAEJ,GAArD,CAA0D,SAAS,CAAEV,IAAI,CAACG,MAAM,CAACY,WAAR,CAAqBZ,MAAM,CAAE,gBAAeW,UAAW,EAA5B,CAA3B,CAA2DL,SAA3D,CAAzE,EAAoJE,SAApJ,EAAtC,CADE,CAAP,CAGD,CAnBD,CAqBA,cAAeP,CAAAA,WAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\nimport styles from './styles.module.css';\n\nconst ThemedImage = props => {\n  const {\n    isClient\n  } = useDocusaurusContext();\n  const {\n    isDarkTheme\n  } = useThemeContext();\n  const {\n    sources,\n    className,\n    alt = '',\n    ...propsRest\n  } = props;\n  const renderedSourceNames = isClient ? isDarkTheme ? ['dark'] : ['light'] : // We need to render both images on the server to avoid flash\n  // See https://github.com/facebook/docusaurus/pull/3730\n  ['light', 'dark'];\n  return <>\n      {renderedSourceNames.map(sourceName => <img key={sourceName} src={sources[sourceName]} alt={alt} className={clsx(styles.themedImage, styles[`themedImage--${sourceName}`], className)} {...propsRest} />)}\n    </>;\n};\n\nexport default ThemedImage;"]}]}