{"remainingRequest":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js??ref--9-1!/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/BlogTagsPostsPage/index.js","dependencies":[{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/BlogTagsPostsPage/index.js","mtime":1619009907570},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/cache-loader/dist/cjs.js","mtime":1603205709816},{"path":"/Users/sebastienlorber/Desktop/projects/docusaurus/node_modules/babel-loader/lib/index.js","mtime":1606901692624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0IExheW91dCBmcm9tJ0B0aGVtZS9MYXlvdXQnO2ltcG9ydCBCbG9nUG9zdEl0ZW0gZnJvbSdAdGhlbWUvQmxvZ1Bvc3RJdGVtJztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2ltcG9ydCBCbG9nU2lkZWJhciBmcm9tJ0B0aGVtZS9CbG9nU2lkZWJhcic7aW1wb3J0IFRyYW5zbGF0ZSx7dHJhbnNsYXRlfWZyb20nQGRvY3VzYXVydXMvVHJhbnNsYXRlJztpbXBvcnR7VGhlbWVDbGFzc05hbWVzLHVzZVBsdXJhbEZvcm19ZnJvbSdAZG9jdXNhdXJ1cy90aGVtZS1jb21tb24nOy8vIFZlcnkgc2ltcGxlIHBsdXJhbGl6YXRpb246IHByb2JhYmx5IGdvb2QgZW5vdWdoIGZvciBub3cKZnVuY3Rpb24gdXNlQmxvZ1Bvc3RzUGx1cmFsKCl7Y29uc3R7c2VsZWN0TWVzc2FnZX09dXNlUGx1cmFsRm9ybSgpO3JldHVybiBjb3VudD0+c2VsZWN0TWVzc2FnZShjb3VudCx0cmFuc2xhdGUoe2lkOid0aGVtZS5ibG9nLnBvc3QucGx1cmFscycsZGVzY3JpcHRpb246J1BsdXJhbGl6ZWQgbGFiZWwgZm9yICJ7Y291bnR9IHBvc3RzIi4gVXNlIGFzIG11Y2ggcGx1cmFsIGZvcm1zIChzZXBhcmF0ZWQgYnkgInwiKSBhcyB5b3VyIGxhbmd1YWdlIHN1cHBvcnQgKHNlZSBodHRwczovL3d3dy51bmljb2RlLm9yZy9jbGRyL2NsZHItYXV4L2NoYXJ0cy8zNC9zdXBwbGVtZW50YWwvbGFuZ3VhZ2VfcGx1cmFsX3J1bGVzLmh0bWwpJyxtZXNzYWdlOidPbmUgcG9zdHx7Y291bnR9IHBvc3RzJ30se2NvdW50fSkpO31mdW5jdGlvbiBCbG9nVGFnc1Bvc3RQYWdlVGl0bGUoe3RhZ05hbWUsY291bnR9KXtjb25zdCBibG9nUG9zdHNQbHVyYWw9dXNlQmxvZ1Bvc3RzUGx1cmFsKCk7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLHtpZDoidGhlbWUuYmxvZy50YWdUaXRsZSIsZGVzY3JpcHRpb246IlRoZSB0aXRsZSBvZiB0aGUgcGFnZSBmb3IgYSBibG9nIHRhZyIsdmFsdWVzOntuUG9zdHM6YmxvZ1Bvc3RzUGx1cmFsKGNvdW50KSx0YWdOYW1lfX0sJ3tuUG9zdHN9IHRhZ2dlZCB3aXRoICJ7dGFnTmFtZX0iJyk7fWZ1bmN0aW9uIEJsb2dUYWdzUG9zdFBhZ2UocHJvcHMpe2NvbnN0e21ldGFkYXRhLGl0ZW1zLHNpZGViYXJ9PXByb3BzO2NvbnN0e2FsbFRhZ3NQYXRoLG5hbWU6dGFnTmFtZSxjb3VudH09bWV0YWRhdGE7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGF5b3V0LHt0aXRsZTpgUG9zdHMgdGFnZ2VkICIke3RhZ05hbWV9ImAsZGVzY3JpcHRpb246YEJsb2cgfCBUYWdnZWQgIiR7dGFnTmFtZX0iYCx3cmFwcGVyQ2xhc3NOYW1lOlRoZW1lQ2xhc3NOYW1lcy53cmFwcGVyLmJsb2dQYWdlcyxwYWdlQ2xhc3NOYW1lOlRoZW1lQ2xhc3NOYW1lcy5wYWdlLmJsb2dUYWdzUG9zdFBhZ2Usc2VhcmNoTWV0YWRhdGFzOnsvLyBhc3NpZ24gdW5pcXVlIHNlYXJjaCB0YWcgdG8gZXhjbHVkZSB0aGlzIHBhZ2UgZnJvbSBzZWFyY2ggcmVzdWx0cyEKdGFnOidibG9nX3RhZ3NfcG9zdHMnfX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToiY29udGFpbmVyIG1hcmdpbi12ZXJ0LS1sZyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InJvdyJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6ImNvbCBjb2wtLTMifSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCbG9nU2lkZWJhcix7c2lkZWJhcjpzaWRlYmFyfSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJtYWluIix7Y2xhc3NOYW1lOiJjb2wgY29sLS03In0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgxIixudWxsLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dUYWdzUG9zdFBhZ2VUaXRsZSx7Y291bnQ6Y291bnQsdGFnTmFtZTp0YWdOYW1lfSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmsse2hyZWY6YWxsVGFnc1BhdGh9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zbGF0ZSx7aWQ6InRoZW1lLnRhZ3MudGFnc1BhZ2VMaW5rIixkZXNjcmlwdGlvbjoiVGhlIGxhYmVsIG9mIHRoZSBsaW5rIHRhcmdldGluZyB0aGUgdGFnIGxpc3QgcGFnZSJ9LCJWaWV3IEFsbCBUYWdzIikpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Im1hcmdpbi12ZXJ0LS14bCJ9LGl0ZW1zLm1hcCgoe2NvbnRlbnQ6QmxvZ1Bvc3RDb250ZW50fSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dQb3N0SXRlbSx7a2V5OkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YS5wZXJtYWxpbmssZnJvbnRNYXR0ZXI6QmxvZ1Bvc3RDb250ZW50LmZyb250TWF0dGVyLG1ldGFkYXRhOkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YSx0cnVuY2F0ZWQ6dHJ1ZX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQmxvZ1Bvc3RDb250ZW50LG51bGwpKSkpKSkpKTt9ZXhwb3J0IGRlZmF1bHQgQmxvZ1RhZ3NQb3N0UGFnZTs="},{"version":3,"sources":["/Users/sebastienlorber/Desktop/projects/docusaurus/packages/docusaurus-theme-classic/lib-next/theme/BlogTagsPostsPage/index.js"],"names":["React","Layout","BlogPostItem","Link","BlogSidebar","Translate","translate","ThemeClassNames","usePluralForm","useBlogPostsPlural","selectMessage","count","id","description","message","BlogTagsPostPageTitle","tagName","blogPostsPlural","nPosts","BlogTagsPostPage","props","metadata","items","sidebar","allTagsPath","name","wrapper","blogPages","page","blogTagsPostPage","tag","map","content","BlogPostContent","permalink","frontMatter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,SAAP,EAAoBC,SAApB,KAAqC,uBAArC,CACA,OAASC,eAAT,CAA0BC,aAA1B,KAA+C,0BAA/C,CAA2E;AAE3E,QAASC,CAAAA,kBAAT,EAA8B,CAC5B,KAAM,CACJC,aADI,EAEFF,aAAa,EAFjB,CAGA,MAAOG,CAAAA,KAAK,EAAID,aAAa,CAACC,KAAD,CAAQL,SAAS,CAAC,CAC7CM,EAAE,CAAE,yBADyC,CAE7CC,WAAW,CAAE,0MAFgC,CAG7CC,OAAO,CAAE,wBAHoC,CAAD,CAI3C,CACDH,KADC,CAJ2C,CAAjB,CAA7B,CAOD,CAED,QAASI,CAAAA,qBAAT,CAA+B,CAC7BC,OAD6B,CAE7BL,KAF6B,CAA/B,CAGG,CACD,KAAMM,CAAAA,eAAe,CAAGR,kBAAkB,EAA1C,CACA,mBAAO,oBAAC,SAAD,EAAW,EAAE,CAAC,qBAAd,CAAoC,WAAW,CAAC,sCAAhD,CAAuF,MAAM,CAAE,CACpGS,MAAM,CAAED,eAAe,CAACN,KAAD,CAD6E,CAEpGK,OAFoG,CAA/F,EAIF,kCAJE,CAAP,CAMD,CAED,QAASG,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,KAAM,CACJC,QADI,CAEJC,KAFI,CAGJC,OAHI,EAIFH,KAJJ,CAKA,KAAM,CACJI,WADI,CAEJC,IAAI,CAAET,OAFF,CAGJL,KAHI,EAIFU,QAJJ,CAKA,mBAAO,oBAAC,MAAD,EAAQ,KAAK,CAAG,iBAAgBL,OAAQ,GAAxC,CAA4C,WAAW,CAAG,kBAAiBA,OAAQ,GAAnF,CAAuF,gBAAgB,CAAET,eAAe,CAACmB,OAAhB,CAAwBC,SAAjI,CAA4I,aAAa,CAAEpB,eAAe,CAACqB,IAAhB,CAAqBC,gBAAhL,CAAkM,eAAe,CAAE,CACxN;AACAC,GAAG,CAAE,iBAFmN,CAAnN,eAIH,2BAAK,SAAS,CAAC,2BAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,WAAD,EAAa,OAAO,CAAEP,OAAtB,EADF,CADF,cAIE,4BAAM,SAAS,CAAC,YAAhB,eACE,2CACE,oBAAC,qBAAD,EAAuB,KAAK,CAAEZ,KAA9B,CAAqC,OAAO,CAAEK,OAA9C,EADF,CADF,cAIE,oBAAC,IAAD,EAAM,IAAI,CAAEQ,WAAZ,eACE,oBAAC,SAAD,EAAW,EAAE,CAAC,yBAAd,CAAwC,WAAW,CAAC,mDAApD,kBADF,CAJF,cASE,2BAAK,SAAS,CAAC,iBAAf,EACGF,KAAK,CAACS,GAAN,CAAU,CAAC,CACZC,OAAO,CAAEC,eADG,CAAD,gBAEP,oBAAC,YAAD,EAAc,GAAG,CAAEA,eAAe,CAACZ,QAAhB,CAAyBa,SAA5C,CAAuD,WAAW,CAAED,eAAe,CAACE,WAApF,CAAiG,QAAQ,CAAEF,eAAe,CAACZ,QAA3H,CAAqI,SAAS,KAA9I,eACA,oBAAC,eAAD,MADA,CAFH,CADH,CATF,CAJF,CADF,CAJG,CAAP,CA6BD,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Layout from '@theme/Layout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport Link from '@docusaurus/Link';\nimport BlogSidebar from '@theme/BlogSidebar';\nimport Translate, { translate } from '@docusaurus/Translate';\nimport { ThemeClassNames, usePluralForm } from '@docusaurus/theme-common'; // Very simple pluralization: probably good enough for now\n\nfunction useBlogPostsPlural() {\n  const {\n    selectMessage\n  } = usePluralForm();\n  return count => selectMessage(count, translate({\n    id: 'theme.blog.post.plurals',\n    description: 'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n    message: 'One post|{count} posts'\n  }, {\n    count\n  }));\n}\n\nfunction BlogTagsPostPageTitle({\n  tagName,\n  count\n}) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return <Translate id=\"theme.blog.tagTitle\" description=\"The title of the page for a blog tag\" values={{\n    nPosts: blogPostsPlural(count),\n    tagName\n  }}>\n      {'{nPosts} tagged with \"{tagName}\"'}\n    </Translate>;\n}\n\nfunction BlogTagsPostPage(props) {\n  const {\n    metadata,\n    items,\n    sidebar\n  } = props;\n  const {\n    allTagsPath,\n    name: tagName,\n    count\n  } = metadata;\n  return <Layout title={`Posts tagged \"${tagName}\"`} description={`Blog | Tagged \"${tagName}\"`} wrapperClassName={ThemeClassNames.wrapper.blogPages} pageClassName={ThemeClassNames.page.blogTagsPostPage} searchMetadatas={{\n    // assign unique search tag to exclude this page from search results!\n    tag: 'blog_tags_posts'\n  }}>\n      <div className=\"container margin-vert--lg\">\n        <div className=\"row\">\n          <div className=\"col col--3\">\n            <BlogSidebar sidebar={sidebar} />\n          </div>\n          <main className=\"col col--7\">\n            <h1>\n              <BlogTagsPostPageTitle count={count} tagName={tagName} />\n            </h1>\n            <Link href={allTagsPath}>\n              <Translate id=\"theme.tags.tagsPageLink\" description=\"The label of the link targeting the tag list page\">\n                View All Tags\n              </Translate>\n            </Link>\n            <div className=\"margin-vert--xl\">\n              {items.map(({\n              content: BlogPostContent\n            }) => <BlogPostItem key={BlogPostContent.metadata.permalink} frontMatter={BlogPostContent.frontMatter} metadata={BlogPostContent.metadata} truncated>\n                  <BlogPostContent />\n                </BlogPostItem>)}\n            </div>\n          </main>\n        </div>\n      </div>\n    </Layout>;\n}\n\nexport default BlogTagsPostPage;"]}]}